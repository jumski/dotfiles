[alias]
  ci = commit
  wip = !git-cim 'wip'
  s = status -sb
  c = checkout
  ps = push
	track = "!f() { git branch --set-upstream-to=origin/$(git symbolic-ref --short HEAD); }; f"

  pr = !sh -c 'git fetch origin pull/$0/head:pr-$0 && git checkout pr-$0'

  amend = commit --amend
  unstage = reset HEAD  # removes files from index
  uncommit = reset --soft HEAD^
  clfd = clean -fd
  ignore = !git reset -- $1 && echo "$1" >> .gitignore && git add .gitignore

  d = diff --ignore-space-change
  wd = diff --word-diff=color --ignore-space-change
  dc = diff --cached --ignore-space-change
  branch = branch -vv
  b = branch -vv
  ba = branch -a
  browse = !gh repo view --web
  l = log

  chr = cherry -v
  rmt = remote -v
  wc = whatchanged --oneline
  lp = log -p
  hist = log --pretty=format:\"%Cgreen%h%Creset %Cblue%ad%Creset %s%C(yellow)%d%Creset %Cblue[%an]%Creset\" --graph --date=short
  h = log --pretty=format:\"%Cgreen%h%Creset %Cblue%ad%Creset %s%C(yellow)%d%Creset %Cblue[%an]%Creset\" --graph --date=short
  dstat = diff --stat
  wtf = !git-wtf
  trail = !git-trail
  neck = !git-neck
  churn = !git-churn
  recent-branches = !git for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname)' refs/heads refs/remotes
  head-sha = ! git log --pretty=format:'%h' -n 1
  copy-head-sha = ! git log --pretty=format:'%h' -n 1 | xclip -sel clipboard
  hierarchy = log --all --graph --decorate --oneline --simplify-by-decoration
  lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all


  conflicts = !git ls-files -u | cut -f 2 | sort -u
  resolve = !nvim -p $(git conflicts)
  ours = checkout --ours
  theirs = checkout --theirs

  stats = !git-stats
  rank = !git-rank-contributors

  new = ls-files --others --exclude-standard
  done = !git-done

  ribbon = tag --force _ribbon origin/master
  catchup = log --patch --reverse --topo-order _ribbon..origin/master
  ctags = !.git/hooks/ctags
  binstubs = !.git/hooks/install-binstubs

  good = bisect good
  bad  = bisect bad
  next =!git add . && git rebase --continue
  skip = rebase --skip
  gemfile = !git checkout --ours Gemfile.lock && bundle && git add Gemfile.lock
  schema = !git checkout --ours db/schema.rb && bundle exec rake db:migrate && git add db/schema.rb

  up = !sh -c 'git pull --rebase --prune && git log --pretty=format:\"%Cred%ae %Creset- %C(yellow)%s %Creset(%ar)\" HEAD@{1}..'
  aa = add .
  ap = add --patch
  xxx = !echo
  ; ap = !git add --patch
  ; ap = !git add --intent-to-add . && git add --patch
  plre = pull --rebase
  ff = merge --ff-only
  noff = merge --no-ff
  prune-remotes = remote prune origin
  nuke = !git-nuke
  pfwlease = push --force-with-lease

  axe = !git-axe
  axer = !git-axer

  ftp = !git-ftp

  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  list-assumed = !git ls-files -v `git rev-parse --show-toplevel` | grep "^[a-z]" | cut -c3-

  hotfix = !git-hotfix
  circle = !git-circle

  # `git log` with patches shown with difftastic.
  dl = -c diff.external=difft log -p --ext-diff
  dlog = -c diff.external=difft log --ext-diff

  # Show the most recent commit with difftastic.
  ds = -c diff.external=difft show --ext-diff
  dshow = -c diff.external=difft show --ext-diff

  # `git diff` with difftastic.
  df = -c diff.external=difft diff
  ddiff = -c diff.external=difft diff



